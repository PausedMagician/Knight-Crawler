@startuml Knight Crawler
skinparam linetype polyline

abstract class Item
Item -right-|> MonoBehaviour

namespace WeaponsSystem {
    abstract class Item
    abstract class Weapon extends Item {
        + int damage
        + int maxCombo
        - int combo
        + Sprite sprite
        + string name
        + int cost
        + int level
        + int rarity
        + attack()
    }
    abstract class Melee extends Weapon
    abstract class Ranged extends Weapon {
        + float range
    }
    abstract class Magic extends Weapon {
        + int manaConsumption
    }

    class ShortSword extends Melee {
        + int damage
        + int maxCombo
        - int combo
        + attack()
    }
    class LongSword extends Melee {
        + int damage
        + int maxCombo
        - int combo
        + attack()
    }
    class ShortBow extends Ranged {
        + int damage
        + int maxCombo
        - int combo
        + attack()
    }
    class LongBow extends Ranged {
        + int damage
        + int maxCombo
        - int combo
        + attack()
    }
    class Fireball extends Magic {
        + int damage
        + int maxCombo
        - int combo
        + attack()
    }
    class MagicMissile extends Magic {
        + int damage
        + int maxCombo
        - int combo
        + attack()
    }
}
namespace ArmorSystem {
    abstract class Item
    abstract class Armor extends Item {
        + List<Effect> effects
        + Sprite sprite
        + string name
        + int cost
        + int level
        + int rarity
    }
    abstract class Effect {
        + int amount
    }
    class DamageReduction extends Effect {
        + int amount
    }
    class HealthRegen extends Effect {
        + int amount
    }
    class HealthBoost extends Effect {
        + int amount
    }
    class MovementSpeed extends Effect {
        + int amount
    }

    Effect .right. Armor

}
namespace AISystem {
    abstract class AI extends MonoBehaviour {
        + int Health
        + int Attack
        + void Wander()
        + void Chase()
        + void Attack()
    }
    class BrawlerAI extends AI {

    }
    class RangerAI extends AI {

    }
    class NPC extends AI {
        + bool Attacked
    }
}

class Bonfire extends MonoBehaviour {
    + void Rest()
}

class GameController {
    + {static} GameController Singleton
    + Bonfire lastRested
}

class Inventory extends MonoBehaviour {
    + Player player
    + List<Item> items
    + EquipWeapon() : Weapon
    + EquipArmor() : Armor
    + AddItem() : void
    + RemoveItem() : void
}

abstract class Player extends MonoBehaviour {
    + float movementSpeed
    + Rigidbody2D rb
    + Weapon equippedWeapon
    + Armor equippedArmor
    + Inventory inventory
    - HandleInput() : void
    - Move() : void
    - Dodge() : void
    - Attack(): void
    - Die() : void
    + EquipWeapon() : Weapon equippedWeapon
    + EquipArmor() : Armor equippedArmor
}
class Knight extends Player {
    + float movementSpeed
    + Rigidbody2D rb
    + Weapon equippedWeapon
    + Inventory inventory
    - HandleInput() : void
    - Move() : void
    - Dodge() : void
    - Attack(): void
    + EquipWeapon() : Weapon equippedWeapon
}
class Archer extends Player {
    + float movementSpeed
    + Rigidbody2D rb
    + Weapon equippedWeapon
    + Inventory inventory
    - HandleInput() : void
    - Move() : void
    - Dodge() : void
    - Attack(): void
    + EquipWeapon() : Weapon equippedWeapon
}
class Mage extends Player {
    + float movementSpeed
    + Rigidbody2D rb
    + Weapon equippedWeapon
    + Inventory inventory
    - HandleInput() : void
    - Move() : void
    - Dodge() : void
    - Attack(): void
    + EquipWeapon() : Weapon equippedWeapon
}
class Jester extends Player {
    + float movementSpeed
    + Rigidbody2D rb
    + Weapon equippedWeapon
    + Inventory inventory
    - HandleInput() : void
    - Move() : void
    - Dodge() : void
    - Attack(): void
    + EquipWeapon() : Weapon equippedWeapon
}



Player "1" *-left-* "1" Inventory
GameController -left-|> MonoBehaviour
GameController "1" *-down-* "1" Bonfire


@enduml